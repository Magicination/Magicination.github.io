
<html>
<head>
   <meta http-equiv="content-type" content="text/html; charset=windows-1251">
                                                                            
   <title>Виды Смарт-карта</title>
</head>
<body text="#000000" bgcolor="pink" link="#0000ee" vlink="#551a8b" alink="#ff0000">
 <a href="Smart-card.html">Содержание</a>
<br>
<hr width="100%">
<b><font size=+1>Смарт-карта
MultiFlex</font></b>
<center><img src="images/mf.gif" hspace=10 vspace=15 nosave height=146 width=228></center>
<b>Электронный кошелек.</b>
<p>&nbsp;&nbsp;&nbsp; Карта MultiFlex предназначена для применения, в качестве
платежного и средства, или инструмента идентификации, в различных областях.
Карта может содержать информацию как финансового, так и информационного
характера и выполнять функции электронного кошелька для оплаты транспорта,
телефона, в системах безопасности, как карточка здоровья и т.д.
<p>&nbsp;&nbsp;&nbsp; Благодаря имеющимся протоколам управления памятью,
сертификации и записи транзакций, операционная система позволяет хранить
данные в сжатой форме, компактно располагая их в памяти карты.
<p>&nbsp;&nbsp;&nbsp; Карта MultiFlex также имеет встроенные платежные
функции и может производить такие операции как: дебетование, кредитование
кошелька, контроль внутреннего баланса, отслеживание последних транзакций
и т.д.
<p>
<hr width="100%">
<p><b>Карта Mifare </b>(Silicon Wafer)
<center><img src="images/mifare.jpg" nosave border=0 height=148 width=234></center>

<p><b>Ключевые характеристики:</b>
<ul>
<li>
технология EEPROM, read/write (8 Kbit)</li>

<li>
рабочая дистанция между картой и антенной 10 см.</li>

<li>
рабочая частота 13,56 MHz</li>

<li>
многофункциональность (память разделена на 16 секторов, каждый из которых
защищен двумя ключами)</li>

<li>
условия доступа, определенные пользователем</li>

<li>
высокий уровень секретности (обоюдная идентификация, кодирование, иерархическая
структура ключей, уникальный серийный номер)</li>

<li>
функции кошелька (увеличение/уменьшение операций на чипе)</li>

<li>
бесконфликтность (антиконфликтный алгоритм допускает наличие нескольких
карт в районе оперирования)</li>

<li>
высокая скорость чтения/записи (106 kBaud)</li>

<li>
время транзакции менее 100 mc</li>

<li>
высокая надежность (отсутствие контактов)</li>

<li>
карта работает без батарей</li>

<li>
Размер и форма карты соответствуют стандарту ISO.</li>
</ul>

<blockquote>Карта Mifare – это многофункциональная смарт-карта, которая
обрабатывает информацию с помощью аппаратной логики. Благодаря многофункциональности,
на карте Mifare может одновременно работать 16 независимых приложений,
поддерживая высокий уровень точности и безопасности.</blockquote>

<center><img src="images/contless.jpg" nosave border=0 height=224 width=233></center>

<p><b>Типичными областями применения карты Mifare являются:</b>
<ul>
<li>
общественный транспорт</li>

<li>
контроль доступа</li>

<li>
торговля</li>

<li>
парковка</li>

<li>
системы лояльности покупателей</li>

<li>
электронный кошелек</li>

<li>
лотереи</li>

<li>
билеты</li>

<li>
электронные ключи</li>
</ul>
Карты Mifare могут работать с широким спектром модулей чтения/записи, отвечающих
различным нуждам и требованиям. Основываясь на этих модулях, интеграторы
систем могут легко создавать аппараты Mifare для чтения/записи, отвечающие
индивидуальным нуждам клиентов.

<hr width="100%">
<p>Карта Cyberflex позволяет программистам использовать современный язык
программирования Java и создавать защищенные JAVA приложения на базе смарт-карт,
отвечающие нуждам корпоративного и потребительского рынка. Это могут быть
программы поощрения постоянных клиентов, здравоохранительные программы,
персональная идентификация, доступ к электронным сетям, электронные финансовые
операции, мобильная цифровая связь и многое другое.
<center>
<p><img src="images/cyberf.jpg" alt="cyberflex" hspace=10 vspace=5 nosave height=155 width=243></center>

<p>&nbsp;&nbsp;&nbsp; Обеспечивая большую гибкость, карта Сyberflex позволяет
загружать на одну смарт-карту различные, даже "не сотрудничающие" приложения,
каждое из которых защищено. Программное обеспечение смарт-карты может быть
обновлено уже после ее выпуска. Это очень удобно, так как позволяет отраслям,
использующим данную технологию, быстро реагировать на изменения требований
рынка.
<p>&nbsp;&nbsp;&nbsp; Теперь программисты, работающие с JAVA, могут программировать
смарт-карты практически для любого применения, используя набор инструментов
разработчика Cyberflex. Эта "технология прорыва" позволяет разрабатывать
смарт-картовые приложения в соответствии с открытыми стандартами, применяющимися
сегодня в индустрии программного обеспечения. Любая программа, написанная
в соответствии с JAVA Card API, имеет широкую сферу использования, так
как может работать на любой смарт-карте, соответствующей стандартам JAVA.
<p><b>Каждый набор инструментов разработчика Cyberflex включает:</b>
<ul>
<li>
Смарт-карты Cyberflex;</li>

<li>
Компьютерный ридер смарт-карт;</li>

<br>CD ROM, включающий рабочее программное обеспечение для обработки кода
Java и его загрузки на карту.</ul>

<hr width="100%">
<b><font size=+1>Смарт-карты
EE2K и EE4K</font></b>
<br>
<center>
<p><img src="images/ee2k4k.gif" hspace=10 nosave height=146 width=228></center>

<p><b>Ключевые характеристики:</b>
<ul>
<li>
технология EEPROM</li>

<li>
емкость памяти: 2048 бит (ЕЕ2К) или 4096 бит (ЕЕ4К)</li>

<li>
1 миллион циклов записи</li>

<li>
упрощенная система доступа к памяти.</li>
</ul>
&nbsp;&nbsp;&nbsp; Это карты свободной памяти, т.е. перезаписываемые. Не
имеют ограничений по чтению, или записи данных. Удобны для использования
в системах контроля доступа, или хранения не финансовой информации.
<p>&nbsp;&nbsp;&nbsp; На базе таких карт можно создавать мобильные, или
индивидуальные системы данных для персонального использования, либо создания
на их основе баз данных.
<p>Карты этого типа имеют произвольную организацию памяти и сочетают комбинированные
функции чтения-записи. Учитывая свойства организации памяти таких карт
и огромный потенциал по количеству циклов записи, можно сказать, что в
отношении них ключевым словом является "гибкость". Они могут использоваться
для создания неограниченного количества приложений, таких как идентификация
людей, хранение личной информации и т.д.
<p>
<hr width="100%">
<b><font size=+1>Смарт-карта
PayFlex™, MicroPayFlex™</font></b>
<br>
<center>Смарт-карта PayFlex™, MicroPayFlex™ - законченный вариант электронного
кошелька разработанный Schlumberger.
<p><img src="images/pf.gif" hspace=10 vspace=15 nosave height=146 width=228></center>

<p><b>Ключевые характеристики:</b>
<ul>
<li>
память ~1 кбайт EEPROM для PayFlex™,</li>

<li>
память ~400 байт EEPROM для MicroPayFlex™;</li>

<li>
стандарт ISO 7816 - 1,2,3;</li>

<li>
управление операционной системой с помощью команд полностью совместимых
со стандартом ISO 7816 – 4;</li>

<li>
операционная система PayFlex™ и MicroPayFlex™ позволяет расширить круг
возможных применений путем гибкого использования EEPROM памяти;</li>

<li>
реализация DES алгоритма;</li>

<li>
Управление PIN кодом и секретными ключами;</li>

<li>
возможность работы в режиме ОN-line или OFF-line</li>

<li>
SAM (security access module) - Модуль Защиты доступа</li>

<li>
защищенный доступ к файлам памяти</li>

<li>
сертификация и запись транзакций в память</li>

<li>
контроль внутреннего баланса, дебетование/кредитование кошельков</li>

<li>
Хранение данных в течение 10 лет</li>
</ul>
&nbsp;&nbsp; Смарт-карты PayFlex™ и MicroPayFlex™ разработаны для приложений,
основанных на электронных операциях в среде с высокой степенью защиты.
<p><b>Она может использоваться в таких приложениях как:</b>
<ul>
<li>
региональная или национальная система электронного бумажника - банки, пенсионные
фонды и т.д.</li>

<li>
коммунальная система электронного бумажника - администрация, компания,
город, ...</li>

<li>
торговая система электронного бумажника - супермаркеты, бензозаправки,
...</li>

<li>
возможность реализации программ лояльности за счет использования бонусового
кошелька</li>
</ul>

<p><br><b>Смарт-карты PayFlex™ и MicroPayFlex™ были разработаны с учетом
следующих требований:</b>
<ul>
<li>
Обеспечение высокой безопасности процесса платежей</li>

<li>
Снижение затрат на проведение операций с мелкими суммами</li>

<li>
Улучшение обслуживания клиентов</li>

<li>
Надежность и качество</li>
</ul>
&nbsp;&nbsp;&nbsp; Операционная система PayFlex™ (MicroPayFlex™) позволяет
выполнять операции в очень безопасной среде и удовлетворять международному
стандарту ISO 7816 -1/2/3 и 4 для облегчения внедрения в банковские системы.
<p>&nbsp;&nbsp;&nbsp; Снабженная стандартным набором команд, операционная
система PayFlex™ (MicroPayFlex™) обеспечивает базу для реализации преимуществ,
заложенных в стандарте ISO7816-4: совместимость продукции разных производителей,
универсальность и многоцелевое назначение - стали возможны благодаря гибкости
передовой технологии управлению памятью, разработанной компанией Schlumberger.
Архитектура операционной системы предоставляет вам полную свободу модернизации
для выполнения новых задач и создания действительно универсальных и гибких
приложений.
<p>&nbsp;&nbsp;&nbsp; Применение операционной системы PayFlex™ (MicroPayFlex™)
обеспечивает защиту, как эмитентов, так и пользователей смарт-карт, а именно
- защиту транзакций, безопасность расчетов, контроль пополнения кошельков.
PayFlex™ поддерживает несколько электронных кошельков, обеспечивающих высший
уровень сервиса и безопасности, потому что микропроцессор изначально был
разработан для платежных целей. PayFlex™ (MicroPayFlex™) также может использоваться
как ключ доступа (Security Access Module) к платежным терминалам. Функциональные
возможности включают в себя проверку PIN-кода, аутентификацию при помощи
DES-алгоритма, контроль безопасности доступа к файлам, контроль выполнения
операций, контроль баланса при помощи управления максимальным значением.
<br>Даже при неправильном использовании смарт-карты, например, при изъятии
смарт-карты во время транзакции, целостность данных нарушена не будет.
Благодаря технологии исчерпывающей проверки и дублирования данных, достигается
максимальная защита информации в течение всего срока жизни смарт-карты.
<p><b>Основные отличия PayFlex™ от MicroPayFlex™.</b>
<p>&nbsp;&nbsp;&nbsp; <b>PayFlex™</b>: могут быть открыты 10 кошельков
(топливных и рублевых), плюс один бонусовый. Бонусовый кошелек заведен
на смарт-карте всегда и при необходимости, может быть активизирован уже
в процессе работы смарт-карты. При использовании схемы прямых расчетов,
если на смарт-карте заведен рублевый кошелек, из него можно расплачиваться
за любую из 10 услуг, предусмотренных системой.
<p>&nbsp;&nbsp;&nbsp; <b>MicroPayFlex™</b>: может содержать только 3 кошелька!
На смарт-карте, при ее форматировании, может быть заведен бонусовый кошелек,
но тогда останется лишь 2 свободных кошелька для денег и услуг. При использовании
схемы прямых расчетов, если на смарт-карте заведен денежный кошелек, то
из него можно расплатиться лишь за те 2, услуги, которые открыты на данной
смарт-карте.
<p>&nbsp;&nbsp;&nbsp; Отличия
<b>PayFlex™</b> от <b>MicroPayFlex™</b> заключаются
в возможностях, обеспечиваемых использованием смарт-карт. Возможности обусловлены
размерами электронной памяти.
<p>
<hr width="100%">
<h3>
Java Card</h3>
<center>
Java Card - это смарт-карта, способная выполнять программы на Java. Спецификация
Java Card 2.0 опубликована на Web-узле <i><a href="http://www.javasoft.com/javacard">http://www.javasoft.com/javacard</a></i>.
Там содержится подробная информация о способах построения виртуальной машины
Java Card и прикладного программного интерфейса (API) смарт-карт. Минимальные
системные требования - наличие 16 Кбайт памяти ROM (read-only memory),
8 Кбайт EEPROM и 256 байт RAM (random access memory).
<center>
<p><img src="images/architec.gif" alt="picture 3" nosave border=0 height=207 width=287>
<br><font size=-1><b>Рис. 3. </b>Архитектура Java Card</font></center>

<p>Системная архитектура Java Card представлена на рис. 3, из которого
видно, что виртуальная машина Java Card находится на более верхнем уровне
по сравнению со встроенной операционной системой и функциями специализированных
интегральных схем (integrated circuit, IC). Уровень JVM скрывает технологические
решения производителя за общим языком и системным интерфейсом. Структура
Java Card определяет набор классов прикладного программного интерфейса
(API), предназначенного для разработки приложений Java Card, и набор системных
служб для нормального функционирования этих приложений. Необходимость дополнительных
библиотек, которые реализуют расширенные служебные функции, обеспечивающие
безопасность и описывающие системную модель, определяется спецификой решаемых
задач. Приложения Java Card называются апплетами. На одной карте может
выполняться несколько различных апплетов. Каждый апплет однозначно определяется
идентификатором приложения (application identifier, AID), который описывается
в пятой части стандарта ISO 7816.
<p>Следует помнить об основных ограничениях смарт-карт. Нельзя приравнивать
их к персональным компьютерам. Объем памяти и вычислительная мощность смарт-карт
крайне малы, а Java Card 2.0 - это не просто урезанная версия JDK, а весьма
специализированный продукт.
<h3>
СРОК СЛУЖБЫ JAVA CARD</h3>
Функционирование Java Card начинается после того, как операционная система,
виртуальная машина Java Card, библиотеки классов API и приложения записываются
в ROM. Процесс размещения основных программных компонентов, реагирующих
на внешние команды, в постоянной памяти микросхемы называется созданием
маски. Перед тем как положить Java Card в свой бумажник, необходимо завершить
инициализацию и персонализацию карты. Инициализация заключается в загрузке
в постоянную память информации общего назначения. Эти данные не являются
уникальными, они могут быть одинаковыми для большой партии карт (в качестве
примера можно привести сведения об эмитенте).
<p>На следующем этапе, который называется персонализацией, в карту заносится
информация, позволяющая однозначно идентифицировать ее владельца. Персонализация
может быть физической или электронной. Физическая персонализация заключается
в выдавливании или выжигании лазером имени пользователя и номера карточки
на ее пластиковом корпусе. Электронная означает загрузку данных о владельце
в постоянную память карты. Этими данными могут быть имя пользователя, персональный
код или личный идентификационный номер.
<p>Процесс инициализации и персонализации может проводиться по-разному
в зависимости от производителя и конкретной модели карты. Чаще всего для
хранения этой информации используется постоянная память EEPROM.
<p>Итак, Java Card готова к применению. Ее можно приобрести непосредственно
у эмитента или у другого продавца. Карты, распространяемые независимыми
продавцами, называются картами общего назначения процесс персонализации
у них, как правило, отсутствует.
<p>Теперь вы можете вставить карту в устройство считывания и заставить
апплеты, записанные в постоянную память карты, выполнить команды APDU,
или же можете загрузить в карту дополнительные апплеты.
<p>Java Card действует до истечения срока службы или до тех пор, пока неисправимая
ошибка не заблокирует ее работу.
<h3>
СРОК СЛУЖБЫ ВИРТУАЛЬНОЙ МАШИНЫ JAVA CARD</h3>
В отличие от виртуальной машины Java (JVM), функционирующей на ПК или рабочей
станции, виртуальная машина Java Card постоянно находится в активном состоянии.
<p>Большая часть информации, хранимой в памяти карты, должна сохраняться
там даже после отключения источника питания (то есть после удаления карты
из считывающего устройства). Виртуальная машина Java Card создает объекты
в постоянной памяти EEPROM. Время работы виртуальной машины Java Card как
раз и является сроком службы карты. После отключения источника питания
виртуальная машина переходит в режим бесконечного цикла.
<h3>
СРОК СЛУЖБЫ АППЛЕТОВ И ОБЪЕКТОВ JAVA CARD</h3>
Срок службы апплетов начинается с момента их установки и регистрации в
таблице системного реестра и заканчивается после удаления из этой таблицы.
Возможность повторного использования свободного пространства, оставшегося
после удаления апплета, определяется наличием или отсутствием механизма
"сборки мусора". Апплеты в карте находятся в неактивном состоянии до тех
пор, пока они явно не будут запущены терминалом.
<p>Объекты создаются в постоянной памяти (например, в EEPROM). Они могут
быть потеряны или удалены механизмом "сборки мусора", если на них не ссылаются
другие постоянные объекты. Однако запись в EEPROM выполняется на три порядка
медленнее по сравнению с записью в RAM.
<p>Доступ к некоторым объектам осуществляется достаточно часто, и содержимое
их полей не нужно сохранять в неизменном состоянии. Java Card поддерживает
временные (temporary) объекты, хранящиеся в памяти RAM. Если объект объявлен
временным, его содержимое не может размещаться в постоянной памяти.
<h3>
ПОДМНОЖЕСТВО ЯЗЫКА JAVA CARD 2.0</h3>
Программы для Java Card, естественно, пишутся на языке Java и компилируются
с использованием стандартных компиляторов Java. Однако вследствие ограниченных
ресурсов памяти и малой вычислительной мощности не все возможности, описанные
в спецификации языка Java, могут быть реализованы в Java Card. В частности,
Java Card не обеспечивает:
<li>
динамическую загрузку классов;</li>

<li>
диспетчер безопасности;</li>

<li>
потоки и синхронизацию;</li>

<li>
клонирование объектов;</li>

<li>
большинство примитивных типов данных (float, double, long и char).</li>

<p>Понятно, что ключевые слова, поддерживающие описанные типы данных, также
исключены из языка. Разработчики виртуальных машин могут поддерживать 32-разрядные
целые, а также собственные методы апплетов, предназначенных для усовершенствованных
смарт-карт с большим объемом памяти. Такие апплеты устанавливаются на карту
уже после того, как она выпущена эмитентом.
<h3>
ПЛАТФОРМА JAVA CARD 2.0</h3>
Смарт-карты существуют уже около 20 лет, и большинство из них совместимы
со стандартами ISO 7816 (части 1-7) или EMV. Стандарт ISO 7816 мы уже рассмотрели.
А что представляет собой EMV? EMV, совместимый с Europay, MasterCard и
Visa, базируется на стандарте ISO 7816 и обладает дополнительными возможностями
поддержки финансовой отрасли. Для обеспечения работы со смарт-картами и
приложений была создана платформа Java Card Framework. Она скрывает детали
инфраструктуры смарт-карт и предлагает производителям приложений для Java
Card относительно простой и открытый программный интерфейс.
<p>Платформа Java Card включает в себя четыре пакета (см. <a href="#vrezka">врезку</a>).
В соответствии с соглашениями об именах, принятыми в Java, пакеты javacardx
являются расширением архитектуры Java Card. Их поддержка является необязательной.
<h3>
БЕЗОПАСНОСТЬ JAVA CARD</h3>
Действие апплетов Java Card ограничивается системой безопасности Java,
однако модель безопасности Java Card существенно отличается от стандартной
модели, принятой в Java. Java Card не поддерживает класс диспетчера безопасности
(Security Manager). Политика безопасности реализуется средствами виртуальной
машины.
<p>Апплеты Java создают объекты, которые в состоянии манипулировать данными
и сохранять их. Владельцем объекта является создавший его апплет. Хотя
любой апплет может ссылаться на объект, он все же не способен вызывать
методы объекта до тех пор, пока не станет владельцем объекта или пока объект
не будет совместно использоваться в явном виде. Апплет может разделять
свои объекты с каким-то другим апплетом или со всеми апплетами сразу.
<p>Апплет в архитектуре Java Card является независимой единицей. Его запуск,
выполнение и функциональные возможности не оказывают никакого воздействия
на другие объекты, хранящиеся в памяти карты.
<h3>
ПРИНЦИПЫ ВЗАИМОДЕЙСТВИЯ ОСНОВНЫХ КОМПОНЕНТОВ JAVA CARD</h3>
Среда выполнения Java Card (Java Card Runtime Environment, JCRE) взаимодействует
с виртуальной машиной Java Card и классами Java Card Framework. Каждому
апплету Java Card соответствует уникальный идентификатор AID, назначаемый
JCRE.
<p>После загрузки апплета в постоянную память карты и установления его
связей с Java Card Framework и другими библиотеками начинается последний
этап настройки. Общедоступный статический метод установки реализуется классом
апплета, он предназначен для создания экземпляра программы и его регистрации
в среде JCRE. Поскольку объем памяти карты ограничен, хорошим решением
является создание и инициализация объектов на время работы апплета.
<p>Апплет, хранящийся в памяти карты, остается в неактивном состоянии до
тех пор, пока он не будет явно запущен на выполнение. Терминал посылает
среде JCRE команду "SELECT APDU". Среда JCRE приостанавливает выполнение
активного апплета, вызывает метод завершения его работы и при необходимости
очищает память. Затем JCRE помечает апплет, идентификатор AID которого
совпадает с идентификатором, заданным в команде "SELECT APDU", и вызывает
метод запуска этого апплета на выполнение. Метод запуска координирует проведение
необходимых подготовительных операций. Среда JCRE переадресует команды
APDU активному апплету до тех пор, пока не будет получена очередная команда
"SELECT APDU".
<h3>
ЗАКЛЮЧЕНИЕ</h3>
С приходом Java Card мир Java приобрел новую оригинальную платформу. Конечно,
для популяризации и широкого распространения Java Card потребуется немало
времени и серьезных маркетинговых усилий. Пользователи ждут от разработчиков
множество разных приложений и утилит. В то же время с большой долей уверенности
можно предсказать, что количество проданных устройств Java Card в ближайшие
несколько лет будет измеряться в миллионах. А это значит, что вскоре в
вашем бумажнике появится маленькая карточка, предназначенная для хранения
персональной информации и выполнения разного рода приложений.
<p>
<hr>
<h3>
<a name="vrezka"></a>Платформа Java Card 2.0</h3>
<b>javacard.framework</b>
<p>Это базовый пакет карты. Он определяет классы Applet и PIN, служащие
для построения основных блоков программ Java Card и команд APDU, операционной
системы и утилит, обеспечивающих реализацию сервисных функций Java Card,
таких как управление командами APDU и совместное использование объектов.
<p><b>javacardx.framework</b>
<p>Этот пакет предлагает объектно-ориентированную архитектуру файловой
системы, совместимой со стандартом ISO 7816-4. Он поддерживает элементарные
файлы (elementary files, EF), выделенные файлы (dedicated files, DF), а
также ориентированные на работу с файлами команды APDU, определенные в
стандарте ISO 7816.
<p><b>javacardx.crypto и javacardx.cryptoEnc</b>
<p>Эти два пакета реализуют криптографические возможности, поддерживаемые
смарт-картами.
<p>
<a href="Smart-card.html">Содержание</a>
</body>
</html>
